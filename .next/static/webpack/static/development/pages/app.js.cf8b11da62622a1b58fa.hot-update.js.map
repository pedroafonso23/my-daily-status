{"version":3,"file":"static/webpack/static\\development\\pages\\app.js.cf8b11da62622a1b58fa.hot-update.js","sources":["webpack:///./pages/app.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport auth0 from '../lib/auth0'\r\nimport router from 'next/router'\r\nimport { db } from '../lib/db'\r\n// import { route } from 'next/dist/next-server/server/router'\r\n\r\nconst App = props => {\r\n    useEffect(() => {\r\n        if (!props.isAuth) {\r\n            router.push('/')\r\n        } else if (props.forceCreate) {\r\n            router.push('/create-status')\r\n        }\r\n    })\r\n    if (!props.isAuth || props.forceCreate) {\r\n        return null\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>App</h1>\r\n            <table>\r\n                <tr>\r\n                    { props.checkins.map(checkin => {\r\n                        return (\r\n                            <tr>\r\n                                \r\n                            </tr>\r\n                        )\r\n                    }) }\r\n                </tr>\r\n            </table>\r\n            <pre>{JSON.stringify(props, null, 2)}</pre>\r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default App\r\n\r\nexport async function getServerSideProps({ req, res}) {\r\n    const session = await auth0.getSession(req)\r\n    if (session) {\r\n        const today = new Date()\r\n        const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate()\r\n        const todaysCheckin = await db\r\n            .collection('markers')\r\n            .doc(currentDate)\r\n            .collection('checks')\r\n            .doc(session.user.sub)\r\n            .get()\r\n        const todaysData = todaysCheckin.data()\r\n        let forceCreate = true\r\n        if (todaysData) {\r\n            // pode ver\r\n            forceCreate = false\r\n            const checkins = await db\r\n                .collection('markers')\r\n                .doc(currentDate)\r\n                .collection('checks')\r\n                .near({\r\n                    center: todaysData.coordinates,\r\n                    radius: 1000\r\n                })\r\n                .get()\r\n            const checkinsList = []\r\n            checkins.docs.forEach(doc => {\r\n                checkinsList.push({\r\n                    ...doc.data(),\r\n                    id: doc.id\r\n                })\r\n            })\r\n            return {\r\n                props: {\r\n                    isAuth: true,\r\n                    user: session.user,\r\n                    forceCreate: false,\r\n                    checkins: checkinsList\r\n                }\r\n            }\r\n        }\r\n        \r\n\r\n        return {\r\n            props: {\r\n                isAuth: true,\r\n                user: session.user,\r\n                forceCreate\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        props: {\r\n            isAuth: false,\r\n            user: {}\r\n        }\r\n    }\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;;AACA;;;;A","sourceRoot":""}