{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\PROJETOS\\\\my-daily-status\\\\pages\\\\create-status.js\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\n\nvar CreateStatus = function CreateStatus() {\n  var _useState = useState({\n    status: 'well',\n    coords: {\n      lat: null,\n      \"long\": null\n    }\n  }),\n      dados = _useState[0],\n      setDatos = _useState[1];\n\n  var getMyLocation = function getMyLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        setDatos(function (old) {\n          return _objectSpread({}, old, {\n            coords: {\n              lat: position.coords.latitude,\n              \"long\": position.coords.longitude\n            }\n          });\n        });\n      });\n    }\n  };\n\n  var onStatusChange = function onStatusChange(evt) {\n    console.log(evt.target.value);\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"Create Status\"), __jsx(\"label\", {\n    className: \"block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    name: \"status\",\n    value: \"well\",\n    onClick: onStatusChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 38\n    }\n  }), \"I am fine and with no symptoms.\"), __jsx(\"label\", {\n    className: \"block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    name: \"status\",\n    value: \"flu\",\n    onClick: onStatusChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 38\n    }\n  }), \"I have flu / cold symptoms.\"), __jsx(\"label\", {\n    className: \"block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    name: \"status\",\n    value: \"covid\",\n    onClick: onStatusChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 38\n    }\n  }), \"I have COVID-19 symptoms.\"), \"Your current position: \", JSON.stringify(dados), __jsx(\"button\", {\n    onClick: getMyLocation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Get my location\"));\n};\n\nexport var __N_SSP = true;\nexport default CreateStatus;","map":{"version":3,"sources":["C:/PROJETOS/my-daily-status/pages/create-status.js"],"names":["React","useState","CreateStatus","status","coords","lat","dados","setDatos","getMyLocation","navigator","geolocation","getCurrentPosition","position","old","latitude","longitude","onStatusChange","evt","console","log","target","value","JSON","stringify"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA,kBACGD,QAAQ,CAAC;AAC/BE,IAAAA,MAAM,EAAE,MADuB;AAE/BC,IAAAA,MAAM,EAAE;AACJC,MAAAA,GAAG,EAAE,IADD;AAEJ,cAAM;AAFF;AAFuB,GAAD,CADX;AAAA,MAChBC,KADgB;AAAA,MACTC,QADS;;AAQvB,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxB,QAAIC,SAAS,CAACC,WAAd,EAA2B;AACvBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAAAC,QAAQ,EAAI;AACjDL,QAAAA,QAAQ,CAAC,UAAAM,GAAG,EAAI;AACZ,mCACOA,GADP;AAEIT,YAAAA,MAAM,EAAE;AACJC,cAAAA,GAAG,EAAEO,QAAQ,CAACR,MAAT,CAAgBU,QADjB;AAEJ,sBAAMF,QAAQ,CAACR,MAAT,CAAgBW;AAFlB;AAFZ;AAOH,SARO,CAAR;AASH,OAVD;AAWH;AACJ,GAdD;;AAgBA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,GAAG,EAAI;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,MAAJ,CAAWC,KAAvB;AACH,GAFD;;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyB;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,QAAzB;AAAkC,IAAA,KAAK,EAAC,MAAxC;AAA+C,IAAA,OAAO,EAAEL,cAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAzB,oCAFJ,EAGI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyB;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,QAAzB;AAAkC,IAAA,KAAK,EAAC,KAAxC;AAA8C,IAAA,OAAO,EAAEA,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAzB,gCAHJ,EAII;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyB;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,QAAzB;AAAkC,IAAA,KAAK,EAAC,OAAxC;AAAgD,IAAA,OAAO,EAAEA,cAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAzB,8BAJJ,6BAK4BM,IAAI,CAACC,SAAL,CAAejB,KAAf,CAL5B,EAMI;AAAQ,IAAA,OAAO,EAAEE,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANJ,CADJ;AAUH,CAtCD;;;AAwCA,eAAeN,YAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport auth0 from '../lib/auth0'\r\n\r\nconst CreateStatus = () => {\r\n    const [dados, setDatos] = useState({\r\n        status: 'well',\r\n        coords: {\r\n            lat: null,\r\n            long: null\r\n        }\r\n    })\r\n    const getMyLocation = () => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(position => {\r\n                setDatos(old => {\r\n                    return {\r\n                        ...old,\r\n                        coords: {\r\n                            lat: position.coords.latitude,\r\n                            long: position.coords.longitude\r\n                        }\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    const onStatusChange = evt => {\r\n        console.log(evt.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Create Status</h1>\r\n            <label className='block'><input type=\"radio\" name='status' value='well' onClick={onStatusChange}/>I am fine and with no symptoms.</label>\r\n            <label className='block'><input type=\"radio\" name='status' value='flu' onClick={onStatusChange}/>I have flu / cold symptoms.</label>\r\n            <label className='block'><input type=\"radio\" name='status' value='covid' onClick={onStatusChange}/>I have COVID-19 symptoms.</label>\r\n            Your current position: {JSON.stringify(dados)}\r\n            <button onClick={getMyLocation}>Get my location</button>\r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default CreateStatus\r\n\r\nexport async function getServerSideProps({ req, res }) {\r\n    const session = await auth0.getSession(req)\r\n    if (session) {\r\n        return {\r\n            props: {\r\n                isAuth: true,\r\n                user: session.user,\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        props: {\r\n            isAuth: false,\r\n            user: {}\r\n        }\r\n\r\n    }  \r\n}"]},"metadata":{},"sourceType":"module"}