{"ast":null,"code":"var _jsxFileName = \"C:\\\\PROJETOS\\\\my-daily-status\\\\pages\\\\app.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport auth0 from '../lib/auth0';\nimport router from 'next/router';\nimport { db } from '../lib/db';\n\nconst App = props => {\n  useEffect(() => {\n    if (!props.isAuth) {\n      router.push('/');\n    }\n  });\n\n  if (!props.isAuth) {\n    return null;\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, \"App\"), __jsx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, JSON.stringify(props, null, 2)));\n};\n\nexport default App;\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    const todaysCheckin = await db.collection('markers').doc('2020-04-10').collection('checks').doc(session.user.sub).get();\n    const todaysData = todaysCheckin.data();\n    if (toda) console.log(todaysCheckin.data());\n    return {\n      props: {\n        isAuth: true,\n        user: session.user\n      }\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false,\n      user: {}\n    }\n  };\n}","map":{"version":3,"sources":["C:/PROJETOS/my-daily-status/pages/app.js"],"names":["React","useEffect","auth0","router","db","App","props","isAuth","push","JSON","stringify","getServerSideProps","req","res","session","getSession","todaysCheckin","collection","doc","user","sub","get","todaysData","data","toda","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,EAAT,QAAmB,WAAnB;;AAEA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AACjBL,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACK,KAAK,CAACC,MAAX,EAAmB;AACfJ,MAAAA,MAAM,CAACK,IAAP,CAAY,GAAZ;AACH;AACJ,GAJQ,CAAT;;AAKA,MAAI,CAACF,KAAK,CAACC,MAAX,EAAmB;AACf,WAAO,IAAP;AACH;;AACD,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAME,IAAI,CAACC,SAAL,CAAeJ,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAN,CAFJ,CADJ;AAMH,CAfD;;AAiBA,eAAeD,GAAf;AAEA,OAAO,eAAeM,kBAAf,CAAkC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAlC,EAA+C;AAClD,QAAMC,OAAO,GAAG,MAAMZ,KAAK,CAACa,UAAN,CAAiBH,GAAjB,CAAtB;;AACA,MAAIE,OAAJ,EAAa;AAET,UAAME,aAAa,GAAG,MAAMZ,EAAE,CACzBa,UADuB,CACZ,SADY,EAEvBC,GAFuB,CAEnB,YAFmB,EAGvBD,UAHuB,CAGZ,QAHY,EAIvBC,GAJuB,CAInBJ,OAAO,CAACK,IAAR,CAAaC,GAJM,EAKvBC,GALuB,EAA5B;AAMA,UAAMC,UAAU,GAAGN,aAAa,CAACO,IAAd,EAAnB;AACA,QAAIC,IAAJ,EACAC,OAAO,CAACC,GAAR,CAAYV,aAAa,CAACO,IAAd,EAAZ;AAGA,WAAO;AACHjB,MAAAA,KAAK,EAAE;AACHC,QAAAA,MAAM,EAAE,IADL;AAEHY,QAAAA,IAAI,EAAEL,OAAO,CAACK;AAFX;AADJ,KAAP;AAMH;;AACD,SAAO;AACHb,IAAAA,KAAK,EAAE;AACHC,MAAAA,MAAM,EAAE,KADL;AAEHY,MAAAA,IAAI,EAAE;AAFH;AADJ,GAAP;AAMH","sourcesContent":["import React, { useEffect } from 'react'\r\nimport auth0 from '../lib/auth0'\r\nimport router from 'next/router'\r\nimport { db } from '../lib/db'\r\n\r\nconst App = props => {\r\n    useEffect(() => {\r\n        if (!props.isAuth) {\r\n            router.push('/')\r\n        }\r\n    })\r\n    if (!props.isAuth) {\r\n        return null\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>App</h1>\r\n            <pre>{JSON.stringify(props, null, 2)}</pre>\r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default App\r\n\r\nexport async function getServerSideProps({ req, res}) {\r\n    const session = await auth0.getSession(req)\r\n    if (session) {\r\n\r\n        const todaysCheckin = await db\r\n            .collection('markers')\r\n            .doc('2020-04-10')\r\n            .collection('checks')\r\n            .doc(session.user.sub)\r\n            .get()\r\n        const todaysData = todaysCheckin.data()\r\n        if (toda)\r\n        console.log(todaysCheckin.data())\r\n        \r\n\r\n        return {\r\n            props: {\r\n                isAuth: true,\r\n                user: session.user\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        props: {\r\n            isAuth: false,\r\n            user: {}\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}